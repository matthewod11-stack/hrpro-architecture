      - name: Eval retrieval grounding
        run: |
          make eval-retrieval
      - name: Upload eval report
        uses: actions/upload-artifact@v3
        with:
          name: retrieval-eval-report
          path: evals/retrieval_eval_report.csv
name: Traceability Link Check

on:
  pull_request:
  push:
    branches: [ main, master ]

jobs:
  traceability:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas openpyxl

      - name: Run validator summary
        run: |
          python tools/validator/generate_validator_summary.py

      - name: Upload validator summary artifacts
        uses: actions/upload-artifact@v3
        with:
          name: validator-summary
          path: |
            docs/traceability/validator_summary.md
            docs/traceability/validator_summary.html

      - name: Add summary to GitHub step
        run: |
          echo "## Validator Results" >> $GITHUB_STEP_SUMMARY
          echo "- [Markdown](docs/traceability/validator_summary.md)" >> $GITHUB_STEP_SUMMARY
          echo "- [HTML](docs/traceability/validator_summary.html)" >> $GITHUB_STEP_SUMMARY
        run: |
          python - << 'PY'
import csv, sys
bad = 0
with open('docs/traceability/Traceability_link_check.csv', newline='') as f:
    for i, row in enumerate(csv.DictReader(f), start=2):
        status = (row.get('Status') or '').strip().upper()
        if status != 'OK':
            bad += 1
print(f"Non-OK rows: {bad}")
sys.exit(1 if bad else 0)
PY

      - name: Upload report (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: traceability-link-check
          path: docs/traceability/Traceability_link_check.csv
          if-no-files-found: warn
